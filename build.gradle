apply plugin: 'java'

def mainClass () {
    switch (homework) {
        case "hw1":
            return "Parse"
        case "hw2":
            return "Typecheck"
        default:
            throw new Exception("Didn't reconize homework='" + homework +"', remember to set it in gradle.properties");
    }
}

repositories {
    jcenter()
}

dependencies {
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

repositories {

}


sourceSets {
    main {
        java {
            srcDir "src/main/java"
        }
    }
    test {
        java {
            srcDir "src/test/java"
        }
    }
}

test {
  testLogging {
    showStandardStreams = true
  }
}

task run (type: JavaExec) {
    standardInput = System.in
    main = mainClass()
    classpath = sourceSets.main.runtimeClasspath
}

task sourcesTar(type: Tar, dependsOn: classes) {
    from sourceSets.main.allJava
    duplicatesStrategy = 'include'
}

task pregrade(type: Exec) {
    dependsOn sourcesTar, test
    if (System.getProperty('os.name').toLowerCase().contains('win')) {
        executable "cmd"
        args "/c", "grade.sh", homework, ".", "testcases/${homework}", "build/distributions/${rootProject.name}.tar"
    } else {
        executable "bash"
        args "./grade.sh", homework, ".", "testcases/${homework}", "build/distributions/${rootProject.name}.tar"
    }
}


artifacts {
    archives sourcesTar
}
